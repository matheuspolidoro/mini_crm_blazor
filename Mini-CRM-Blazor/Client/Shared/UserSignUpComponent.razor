@using Microsoft.AspNetCore.Components.Forms
@using Mini_CRM_Blazor.Shared.Models
@using MudBlazor
@using System.ComponentModel.DataAnnotations

@inject CustomStateProvider authStateProvider
@inject NavigationManager navigationManager

<EditForm Model="registerRequest" OnValidSubmit="OnSubmit">
    <DataAnnotationsValidator />

    <MudCard Elevation="0">
        <MudCardContent>
            <MudTextField Label="First name"
                          HelperText="Max. 8 characters"
                          @bind-Value="registerRequest.UserName"
                          For="@(() => registerRequest.UserName)" />
            <ValidationMessage For="@(() => registerRequest.UserName)" />
            <MudTextField Label="Email"
                          Class="mt-3"
                          @bind-Value="registerRequest.Email"
                          For="@(() => registerRequest.Email)" />
            <ValidationMessage For="@(() => registerRequest.Email)" />
            <MudTextField Label="Password"
                          HelperText="Choose a strong password"
                          Class="mt-3"
                          @bind-Value="registerRequest.Password"
                          For="@(() => registerRequest.Password)"
                          InputType="InputType.Password" />
            <ValidationMessage For="@(() => registerRequest.Password)" />
            <MudTextField Label="Password"
                          HelperText="Repeat the password"
                          Class="mt-3"
                          @bind-Value="registerRequest.PasswordConfirm"
                          For="@(() => registerRequest.PasswordConfirm)"
                          InputType="InputType.Password" />
            <ValidationMessage For="@(() => registerRequest.PasswordConfirm)" />
        </MudCardContent>
        <MudCardActions>
            <MudButton ButtonType="ButtonType.Submit"
                       Variant="Variant.Filled" 
                       Color="Color.Primary"
                       DisableElevation="true"
                       Class="ml-auto">Register</MudButton>
        </MudCardActions>
    </MudCard>
    @*<MudPaper Class="pa-4 mud-height-full" Elevation="0">
        <MudText Typo="Typo.subtitle2">Validation Summary</MudText>
        @if (success)
        {
            <MudText Color="Color.Success">Success</MudText>
        }
        else
        {
            <MudText Color="@Color.Error">
                <ValidationSummary />
            </MudText>
        }
    </MudPaper> *@
</EditForm>

@code {
    RegisterRequest registerRequest { get; set; } = new RegisterRequest();
    string error { get; set; }

    async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Register(registerRequest);
            navigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}